{"version":3,"file":"static/js/page_action-aggregate.123f8d5e.chunk.js","mappings":"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","sources":["../node_modules/@newrelic/browser-agent/dist/esm/features/page_action/aggregate/index.js"],"sourcesContent":["/*\n * Copyright 2020 New Relic Corporation. All rights reserved.\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { mapOwn } from '../../../common/util/map-own';\nimport { stringify } from '../../../common/util/stringify';\nimport { registerHandler as register } from '../../../common/event-emitter/register-handler';\nimport { HarvestScheduler } from '../../../common/harvest/harvest-scheduler';\nimport { cleanURL } from '../../../common/url/clean-url';\nimport { getConfigurationValue, getInfo, getRuntime } from '../../../common/config/config';\nimport { FEATURE_NAME } from '../constants';\nimport { isBrowserScope } from '../../../common/constants/runtime';\nimport { AggregateBase } from '../../utils/aggregate-base';\nexport class Aggregate extends AggregateBase {\n  static featureName = FEATURE_NAME;\n  constructor(agentIdentifier, aggregator) {\n    var _this;\n    super(agentIdentifier, aggregator, FEATURE_NAME);\n    _this = this;\n    this.eventsPerMinute = 240;\n    this.harvestTimeSeconds = getConfigurationValue(this.agentIdentifier, 'page_action.harvestTimeSeconds') || getConfigurationValue(this.agentIdentifier, 'ins.harvestTimeSeconds') || 30;\n    this.eventsPerHarvest = this.eventsPerMinute * this.harvestTimeSeconds / 60;\n    this.referrerUrl = undefined;\n    this.currentEvents = undefined;\n    this.events = [];\n    this.att = getInfo(this.agentIdentifier).jsAttributes; // per-agent, aggregators-shared info context\n\n    if (isBrowserScope && document.referrer) this.referrerUrl = cleanURL(document.referrer);\n    register('api-addPageAction', function () {\n      return _this.addPageAction(...arguments);\n    }, this.featureName, this.ee);\n    this.waitForFlags(['ins']).then(_ref => {\n      let [enabled] = _ref;\n      if (enabled) {\n        const scheduler = new HarvestScheduler('ins', {\n          onFinished: function () {\n            return _this.onHarvestFinished(...arguments);\n          }\n        }, this);\n        scheduler.harvest.on('ins', function () {\n          return _this.onHarvestStarted(...arguments);\n        });\n        scheduler.startTimer(this.harvestTimeSeconds, 0);\n      } else {\n        this.blocked = true;\n      }\n    });\n    this.drain();\n  }\n  onHarvestStarted(options) {\n    const {\n      userAttributes,\n      atts\n    } = getInfo(this.agentIdentifier);\n    var payload = {\n      qs: {\n        ua: userAttributes,\n        at: atts\n      },\n      body: {\n        ins: this.events\n      }\n    };\n    if (options.retry) {\n      this.currentEvents = this.events;\n    }\n    this.events = [];\n    return payload;\n  }\n  onHarvestFinished(result) {\n    if (result && result.sent && result.retry && this.currentEvents) {\n      this.events = this.events.concat(this.currentEvents);\n      this.currentEvents = null;\n    }\n  }\n\n  // WARNING: Insights times are in seconds. EXCEPT timestamp, which is in ms.\n  addPageAction(t, name, attributes) {\n    if (this.events.length >= this.eventsPerHarvest || this.blocked) return;\n    var width;\n    var height;\n    var eventAttributes = {};\n    if (isBrowserScope && window.document.documentElement) {\n      // Doesn't include the nav bar when it disappears in mobile safari\n      // https://github.com/jquery/jquery/blob/10399ddcf8a239acc27bdec9231b996b178224d3/src/dimensions.js#L23\n      width = window.document.documentElement.clientWidth;\n      height = window.document.documentElement.clientHeight;\n    }\n    var defaults = {\n      timestamp: t + getRuntime(this.agentIdentifier).offset,\n      timeSinceLoad: t / 1000,\n      browserWidth: width,\n      browserHeight: height,\n      referrerUrl: this.referrerUrl,\n      currentUrl: cleanURL('' + location),\n      pageUrl: cleanURL(getRuntime(this.agentIdentifier).origin),\n      eventType: 'PageAction'\n    };\n    mapOwn(defaults, set);\n    mapOwn(getInfo(this.agentIdentifier).jsAttributes, set);\n    if (attributes && typeof attributes === 'object') {\n      mapOwn(attributes, set);\n    }\n    eventAttributes.actionName = name || '';\n    this.events.push(eventAttributes);\n    function set(key, val) {\n      eventAttributes[key] = val && typeof val === 'object' ? stringify(val) : val;\n    }\n  }\n}"],"names":["Aggregate","AggregateBase","constructor","agentIdentifier","aggregator","_this","super","FEATURE_NAME","this","eventsPerMinute","harvestTimeSeconds","getConfigurationValue","eventsPerHarvest","referrerUrl","undefined","currentEvents","events","att","getInfo","jsAttributes","isBrowserScope","document","referrer","cleanURL","register","addPageAction","arguments","featureName","ee","waitForFlags","then","_ref","enabled","scheduler","HarvestScheduler","onFinished","onHarvestFinished","harvest","on","onHarvestStarted","startTimer","blocked","drain","options","userAttributes","atts","payload","qs","ua","at","body","ins","retry","result","sent","concat","t","name","attributes","length","width","height","eventAttributes","window","documentElement","clientWidth","clientHeight","defaults","timestamp","getRuntime","offset","timeSinceLoad","browserWidth","browserHeight","currentUrl","location","pageUrl","origin","eventType","mapOwn","set","actionName","push","key","val","stringify","_defineProperty"],"sourceRoot":""}